name: Build release zip file
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'By default the zip file is generated from the branch the workflow runs from, but you can specify an explicit reference to use instead here (e.g. refs/tags/tag_name or refs/heads/release/x.x). The resulting file will be available as an artifact on the workflow run.'
        required: false
        default: ''
      timeOverride:
        description: "Time Override: The time to use in checking whether the action should run (default: 'now')."
        default: 'now'
env:
    TIME_OVERRIDE: ${{ inputs.timeOverride || 'now' }}
    GIT_COMMITTER_NAME: 'WooCommerce Bot'
    GIT_COMMITTER_EMAIL: 'no-reply@woocommerce.com'
    GIT_AUTHOR_NAME: 'WooCommerce Bot'
    GIT_AUTHOR_EMAIL: 'no-reply@woocommerce.com'

jobs:
  build-prep:
    name: Build prep for release zip file
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d

      - name: Setup Node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        with:
            node-version-file: .nvmrc
            cache: pnpm
            registry-url: 'https://registry.npmjs.org'

      - name: Install prerequisites
        run: |
            pnpm install --filter monorepo-utils --ignore-scripts
            # ignore scripts speeds up setup signficantly, but we still need to build monorepo utils
            pnpm build
        working-directory: tools/monorepo-utils

      - name: 'Get the  versions for the accelerated and monthly releases'
        id: get-versions
        run: pnpm utils code-freeze get-version -o $TIME_OVERRIDE

      - name: Generate changelog changes
        id: changelog
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm utils code-freeze changelog -c -o ${{ github.repository_owner }} -v ${{ steps.get-versions.outputs.monthlyVersionXY }}

  build:
    name: Build release zip file
    runs-on: ubuntu-20.04
    needs: build-prep
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Setup WooCommerce Monorepo
        uses: ./.github/actions/setup-woocommerce-monorepo
        with:
          pull-package-deps: '@woocommerce/plugin-woocommerce'

      - name: Build zip
        working-directory: plugins/woocommerce
        run: bash bin/build-zip.sh

      - name: Unzip the file (prevents double zip problem)
        run: unzip plugins/woocommerce/woocommerce.zip -d zipfile

      - name: Upload the zip file as an artifact
        uses: actions/upload-artifact@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: woocommerce
          path: zipfile
          retention-days: 7
